# layer lengths nums	corners		corner idx
#	0	1		1		1
#	1	6		2:7		2:7:1		0:5:1
#	2	12		8:19	8:19:2		0:11:2
#	3	18		20:37	20:37:3		0:17:3

from time import time

def primesbelow(N):
    # http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188
    #""" Input N>=6, Returns a list of primes, 2 <= p < N """
    correction = N % 6 > 1
    N = {0:N, 1:N-1, 2:N+4, 3:N+3, 4:N+2, 5:N+1}[N%6]
    sieve = [True] * (N // 3)
    sieve[0] = False
    for i in range(int(N ** .5) // 3 + 1):
        if sieve[i]:
            k = (3 * i + 1) | 1
            sieve[k*k // 3::2*k] = [False] * ((N//6 - (k*k)//6 - 1)//k + 1)
            sieve[(k*k + 4*k - 2*k*(i%2)) // 3::2*k] = [False] * ((N // 6 - (k*k + 4*k - 2*k*(i%2))//6 - 1) // k + 1)
    return [2, 3] + [(3 * i + 1) | 1 for i in range(1, N//3 - correction) if sieve[i]]


def getlayerlen(layer):
	if layer==0: return 1
	return layer*6

def getnumber(layer, index): # both 0 based
	if layer==0: return 1
	layerlen = getlayerlen(layer)
	index %= layerlen
	layerstart = 2+3*layer*(layer-1)
	return layerstart + index

def getcorneridx(layer, cornernum):
	return layer*cornernum

def isprime(n):
	if n<=primes[-1]: return n in sprimes
	limit = int(n**0.5)+1
	for p in primes:
		if p>limit: return True
		if n%p==0: return False

plimit = 10**6
primes = primesbelow(plimit)
sprimes = set(primes)

t1=time()
sols = [1]
for layer in range(1,100000):
	base = getnumber(layer, getcorneridx(layer, 0))
	if base > plimit**2:
		print "ARGH"
		break
	# corners
	for corner_num in range(6):
		base = getnumber(layer, getcorneridx(layer, corner_num))
		nums = [getnumber(layer, getcorneridx(layer, corner_num)-1),
				getnumber(layer, getcorneridx(layer, corner_num)+1),
				getnumber(layer-1, getcorneridx(layer-1, corner_num)),
				getnumber(layer+1, getcorneridx(layer+1, corner_num)-1),
				getnumber(layer+1, getcorneridx(layer+1, corner_num)),
				getnumber(layer+1, getcorneridx(layer+1, corner_num)+1)]
#		print base, nums
		nums = [abs(num-base) for num in nums]
#		print nums
		nums = [num for num in nums if num in sprimes]
#		print nums
		if len(nums)==3: sols.append(base)
	# last item on layer
	base = getnumber(layer, -1)
	nums = [getnumber(layer, 0), getnumber(layer, -2), getnumber(layer-1, 0), getnumber(layer-1, -1), getnumber(layer+1, -1), getnumber(layer+1, -2)]
#	print base, nums
	nums = [abs(num-base) for num in nums]
#	print nums
	nums = [num for num in nums if num in sprimes]
#	print nums
	if len(nums)==3: sols.append(base)

t2=time()
print t2-t1,sols[1999]
# 10.4110000134 14516824220
