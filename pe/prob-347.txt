from time import time

def primesbelow(N):
    # http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188
    #""" Input N>=6, Returns a list of primes, 2 <= p < N """
    correction = N % 6 > 1
    N = {0:N, 1:N-1, 2:N+4, 3:N+3, 4:N+2, 5:N+1}[N%6]
    sieve = [True] * (N // 3)
    sieve[0] = False
    for i in range(int(N ** .5) // 3 + 1):
        if sieve[i]:
            k = (3 * i + 1) | 1
            sieve[k*k // 3::2*k] = [False] * ((N//6 - (k*k)//6 - 1)//k + 1)
            sieve[(k*k + 4*k - 2*k*(i%2)) // 3::2*k] = [False] * ((N // 6 - (k*k + 4*k - 2*k*(i%2))//6 - 1) // k + 1)
    return [2, 3] + [(3 * i + 1) | 1 for i in range(1, N//3 - correction) if sieve[i]]

limit = 10**7

t1=time()
primes = primesbelow(limit)

sum = 0
for i in range(len(primes)):
	pi = primes[i]
	print pi
	if pi**2 > limit: break
	i_limit = int(log(limit, pi))
	for j in range(i+1,len(primes)):
		pj = primes[j]
		candidates = []
		for ip in range(1,i_limit+1):
			vi = pi**ip
			jp = int(log(limit/vi, pj))
			if jp>0:
				v = vi * (pj**jp)
				candidates.append(v)
		if len(candidates)>0:
			sum += max(candidates)
		else:
			break

t2=time()
print t2-t1,sum
# 41 sec, 11109800204052