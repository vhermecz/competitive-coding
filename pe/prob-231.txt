def primesbelow(N):
    # http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188
    #""" Input N>=6, Returns a list of primes, 2 <= p < N """
    correction = N % 6 > 1
    N = {0:N, 1:N-1, 2:N+4, 3:N+3, 4:N+2, 5:N+1}[N%6]
    sieve = [True] * (N // 3)
    sieve[0] = False
    for i in range(int(N ** .5) // 3 + 1):
        if sieve[i]:
            k = (3 * i + 1) | 1
            sieve[k*k // 3::2*k] = [False] * ((N//6 - (k*k)//6 - 1)//k + 1)
            sieve[(k*k + 4*k - 2*k*(i%2)) // 3::2*k] = [False] * ((N // 6 - (k*k + 4*k - 2*k*(i%2))//6 - 1) // k + 1)
    return [2, 3] + [(3 * i + 1) | 1 for i in range(1, N//3 - correction) if sieve[i]]

def binomsum(a, b):
	def factnum(a,p):
		n = 0
		while a!=0:
			a/=p
			n+=a
		return n
	res = 0
	for p in primesbelow(a):
		res += (factnum(a, p)-factnum(a-b, p)-factnum(b, p))*p
	return res

from time import time
t1=time()
sol = binomsum(20000000,15000000)
t2=time()
print t2-t1,sol

# cpy	4.37000012398 7526965179680
# pypy	3.09100008011 7526965179680
