class Totient:
    def __init__(self, n):
        self.totients = [1 for i in range(n)]
        for i in range(2, n):
            if self.totients[i] == 1:
                for j in range(i, n, i):
                    self.totients[j] *= i - 1
                    k = j / i
                    while k % i == 0:
                        self.totients[j] *= i
                        k /= i
    def __call__(self, i):
        return self.totients[i]

from time import time

t1=time()
phi = Totient(10**7)
perm = ["".join(sorted(str(i))) for i in range(10**7)]
f = [i for i in range(2, 10**7) if perm[i] == perm[phi(i)]]
rat = [1.0*i/phi(i) for i in f]
print f[rat.index(min(rat))]
t2=time()
print t2-t1


solution = 8319823
# time 63sec

