from time import time

def memoize(f):
	cache= {}
	def memf(*x):
		if x not in cache:
			cache[x] = f(*x)
		return cache[x]
	return memf

@memoize
def cumt(n):
	if n==0: return 0
	return cumt(n-1) + t(n)

@memoize
def t(n):
	if n==0: return 0
	if n==1: return 45
	if n==2: return 495
	dn = n/2
	dnr = dn + n%2
	res = sum(sumnum(ds,dn,True)*numnum(ds,dn,False) + sumnum(ds,dn,False)*numnum(ds,dn,True)*10**dnr for ds in range(dn*9+1))
	if n%2:
		num = sum(numnum(ds,dn,False)*numnum(ds,dn,True) for ds in range(dn*9+1))
		res = res*10 + 10**dn*45*num
	return res

@memoize
def sumnum(ds, dn, zero):
	if ds>dn*9 or ds<1: return 0
	if dn==1: return ds*int(ds>0 or zero)
	return sum(10*sumnum(ds-i,dn-1,zero)+i*numnum(ds-i,dn-1,zero) for i in range(10))

@memoize
def numnum(ds, dn, zero):
	if zero and ds==0: return 1
	if ds>dn*9 or ds<1: return 0
	if dn==1: return int(ds>0 or zero)
	return sum(numnum(ds-i,dn-1,zero) for i in range(10))

t1=time()
sol = cumt(47) % (3**15)
t2=time()
print t2-t1,sol
# 0.184000015259 6273134
